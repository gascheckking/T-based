export default function RootLayout({ children }) {
  return (
    <html lang="en">
      <body>{children}</body>
    </html>
  );
}

lib/wield.js
// Public Base chain id (8453) with env override
export const CHAIN_ID = Number(process.env.NEXT_PUBLIC_CHAIN_ID || 8453);

// Always call Wield through our proxy API route
export async function wieldFetch(path, init = {}) {
  const clean = String(path || "").replace(/^\/?/, "");
  const res = await fetch(`/api/wield/${clean}`, {
    ...init,
    cache: "no-store"
  });
  if (!res.ok) {
    const t = await safeText(res);
    throw new Error(`Wield ${res.status} ${t || ""}`.trim());
  }
  const ct = res.headers.get("content-type") || "";
  if (ct.includes("application/json")) return res.json();
  const txt = await res.text();
  try { return JSON.parse(txt); } catch { return txt; }
}

async function safeText(r) {
  try { return await r.text(); } catch { return ""; }
}

// Numeric USD helper (for sorting creators by top value)
export function usdNum(x) {
  const v = x?.usdPrice ?? x?.priceUsd ?? x?.price_usd ?? x?.priceUSD ?? x?.metadata?.usdPrice ?? null;
  const n = Number(v);
  return Number.isFinite(n) ? n : 0;
}

app/api/wield/[...path]/route.js
export const dynamic = "force-dynamic";

export async function GET(req, { params }) {
  try {
    const parts = params.path || [];
    const suffix = req.nextUrl.search || "";
    const upstream = `https://build.wield.xyz/${parts.join("/")}${suffix}`;
    const r = await fetch(upstream, {
      headers: { "x-api-key": process.env.WIELD_API_KEY || "" },
      next: { revalidate: 0 }
    });
    const text = await r.text();
    return new Response(text, {
      status: r.status,
      headers: { "content-type": r.headers.get("content-type") || "application/json" }
    });
  } catch (e) {
    return new Response(JSON.stringify({ success: false, message: e.message }), { status: 500 });
  }
}

export async function POST(req, { params }) {
  try {
    const parts = params.path || [];
    const suffix = req.nextUrl.search || "";
    const upstream = `https://build.wield.xyz/${parts.join("/")}${suffix}`;
    const body = await req.text();
    const r = await fetch(upstream, {
      method: "POST",
      headers: {
        "x-api-key": process.env.WIELD_API_KEY || "",
        "content-type": req.headers.get("content-type") || "application/json"
      },
      body
    });
    const text = await r.text();
    return new Response(text, {
      status: r.status,
      headers: { "content-type": r.headers.get("content-type") || "application/json" }
    });
  } catch (e) {
    return new Response(JSON.stringify({ success: false, message: e.message }), { status: 500 });
  }
}

app/globals.css
/* ====== RESET ====== */
*{ box-sizing: border-box; margin: 0; padding: 0; }
html, body { height: 100%; }
body { font-family: ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto, Arial, sans-serif; }

/* ====== THEME ====== */
:root {
  --bg: #0d0d0f;
  --panel: #141418;
  --panel-2: #191a20;
  --border: #24252e;
  --text: #f2f2f3;
  --muted: #9aa0aa;
  --primary: #ff2b45;
  --primary-2: #65161f;
  --green: #4ade80;
  --amber: #f59e0b;
}
@media (prefers-color-scheme: light) {
  :root {
    --bg: #f8fafc;
    --panel: #ffffff;
    --panel-2: #f1f5f9;
    --border: #e2e8f0;
    --text: #0f172a;
    --muted: #475569;
    --primary: #e11d48;
    --primary-2: #fda4af;
    --green: #16a34a;
    --amber: #b45309;
  }
}
body { background: var(--bg); color: var(--text); }

/* ====== HEADER ====== */
.header {
  position: sticky; top: 0; z-index: 40;
  background: linear-gradient(180deg, rgba(255,43,69,0.08), rgba(0,0,0,0)) , var(--panel);
  border-bottom: 1px solid var(--border);
  padding: 12px 16px;
}
.header .row { display:flex; align-items:center; justify-content:space-between; gap:12px; }
.logo { display:flex; align-items:center; gap:10px; font-weight:800; letter-spacing:.3px; }
.logo-badge { width:38px; height:38px; display:grid; place-items:center; border-radius:10px; background:var(--primary); color:#fff; }
.pill { background:var(--primary-2); color:#fff; padding:5px 12px; border-radius:999px; font-size:12px; border:1px solid var(--border); }

/* ====== TABS ====== */
.tabbar { display:flex; gap:10px; overflow:auto; padding-top:12px; }
.tabbar::-webkit-scrollbar { display:none; }
.tab {
  background:var(--panel-2); border:1px solid var(--border); color:var(--muted);
  padding:9px 14px; border-radius:10px; cursor:pointer; white-space:nowrap;
}
.tab.active { background:var(--primary); color:#fff; border-color:transparent; }

/* ====== LAYOUT ====== */
.wrapper { padding: 18px; max-width: 1280px; margin: 0 auto; }
.grid { display:grid; gap:18px; grid-template-columns: 1fr 360px; }
@media (max-width: 980px){ .grid { grid-template-columns: 1fr; } }
.panel {
  background:var(--panel); border:1px solid var(--border); border-radius:14px; padding:16px;
}
.panel-head { display:flex; align-items:center; justify-content:space-between; margin-bottom:12px; }
.panel-title { font-weight:800; font-size:18px; }

/* ====== CONTROLS ====== */
.row { display:flex; align-items:center; gap:8px; flex-wrap:wrap; }
.input, .select {
  background:var(--panel-2); border:1px solid var(--border); color:var(--text); padding:10px 12px; border-radius:10px;
}
.btn {
  background:var(--primary); color:#fff; border:none; padding:10px 14px; border-radius:10px; cursor:pointer; font-weight:700;
}
.btn.ghost { background:transparent; border:1px solid var(--border); color:var(--muted); }

/* ====== CARDS ====== */
.cards { display:grid; grid-template-columns: repeat(auto-fill,minmax(220px,1fr)); gap:14px; }
.card {
  border:1px solid var(--border); border-radius:14px; overflow:hidden; background:var(--panel-2);
}
.thumb { width:100%; height:180px; background:#111; background-size:cover; background-position:center; }
.thumb.lg { height:220px; }
.meta { padding:12px; display:grid; gap:8px; }
.meta .title { font-weight:800; font-size:15px; line-height:1.2; }
.meta .sub { font-size:13px; color:var(--muted); }
.meta .row-between { display:flex; align-items:center; justify-content:space-between; }
.badge { display:inline-block; padding:4px 8px; border-radius:999px; background:var(--panel); border:1px solid var(--border); font-size:12px; }

/* ====== TICKER (right -> left) ====== */
.ticker-wrap { overflow:hidden; border:1px solid var(--border); border-radius:14px; background:var(--panel); }
.ticker-rtl {
  display: inline-flex;
  gap: 16px;
  white-space: nowrap;
  will-change: transform;
  animation: ticker-left 28s linear infinite;
}
.ticker-rtl .chip {
  background:var(--panel-2); border:1px solid var(--border); padding:8px 12px; border-radius:999px; font-size:13px;
}
@keyframes ticker-left { 0% { transform: translateX(100%); } 100% { transform: translateX(-100%); } }

/* ====== FOOTER ====== */
.footer { margin: 20px 0 40px; text-align:center; color:var(--muted); font-size:13px; }
.footer a { color: var(--primary); text-decoration: none; }

/* Utility */
.grow { flex: 1 1 auto; }
.linklike { text-decoration: none; color: var(--text); border-bottom:1px dashed var(--border); }
.linklike:hover { border-bottom-color: var(--primary); }
